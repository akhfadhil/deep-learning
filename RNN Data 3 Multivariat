{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"authorship_tag":"ABX9TyOTRJ5FeLLTLCjT0OH+2ION"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","source":["import pandas as pd\n","import datetime as dt\n","import time\n","import numpy as np\n","from pandas import DataFrame\n","from pandas import concat\n","from matplotlib import pyplot\n","from numpy import concatenate\n","import seaborn as sns\n","\n","from sklearn.preprocessing import MinMaxScaler\n","from keras.models import Sequential\n","from keras.layers.core import Dense\n","from keras.layers import SimpleRNN\n","from keras import optimizers\n","from keras.callbacks import EarlyStopping\n","\n","import matplotlib.pyplot as plt\n","\n","from sklearn.metrics import mean_squared_error, r2_score\n","from math import sqrt"],"metadata":{"id":"lyortpm3b9Tn","executionInfo":{"status":"ok","timestamp":1674289682675,"user_tz":-420,"elapsed":338,"user":{"displayName":"Fanny F","userId":"11831095778884674749"}}},"execution_count":100,"outputs":[]},{"cell_type":"markdown","source":["# Dataset Preprocessing and Feature Extraction"],"metadata":{"id":"5PTebdNpFuk5"}},{"cell_type":"code","source":["url = \"https://drive.google.com/file/d/1u95FUEFI29NV-LmdCRHzRwj-t4tWH87m/view?usp=share_link\"\n","url='https://drive.google.com/uc?id=' + url.split('/')[-2]\n","df = pd.read_csv(url, parse_dates = True, index_col=0)\n","df.tail()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":487},"id":"xVQSBfwkXr7L","executionInfo":{"status":"ok","timestamp":1674289469559,"user_tz":-420,"elapsed":5202,"user":{"displayName":"Fanny F","userId":"11831095778884674749"}},"outputId":"d15f89b2-c5e2-4449-dd28-e8cbe06e704c"},"execution_count":74,"outputs":[{"output_type":"execute_result","data":{"text/plain":["                           generation biomass  \\\n","time                                            \n","2018-12-31 19:00:00+01:00               297.0   \n","2018-12-31 20:00:00+01:00               296.0   \n","2018-12-31 21:00:00+01:00               292.0   \n","2018-12-31 22:00:00+01:00               293.0   \n","2018-12-31 23:00:00+01:00               290.0   \n","\n","                           generation fossil brown coal/lignite  \\\n","time                                                              \n","2018-12-31 19:00:00+01:00                                   0.0   \n","2018-12-31 20:00:00+01:00                                   0.0   \n","2018-12-31 21:00:00+01:00                                   0.0   \n","2018-12-31 22:00:00+01:00                                   0.0   \n","2018-12-31 23:00:00+01:00                                   0.0   \n","\n","                           generation fossil coal-derived gas  \\\n","time                                                            \n","2018-12-31 19:00:00+01:00                                 0.0   \n","2018-12-31 20:00:00+01:00                                 0.0   \n","2018-12-31 21:00:00+01:00                                 0.0   \n","2018-12-31 22:00:00+01:00                                 0.0   \n","2018-12-31 23:00:00+01:00                                 0.0   \n","\n","                           generation fossil gas  generation fossil hard coal  \\\n","time                                                                            \n","2018-12-31 19:00:00+01:00                 7634.0                       2628.0   \n","2018-12-31 20:00:00+01:00                 7241.0                       2566.0   \n","2018-12-31 21:00:00+01:00                 7025.0                       2422.0   \n","2018-12-31 22:00:00+01:00                 6562.0                       2293.0   \n","2018-12-31 23:00:00+01:00                 6926.0                       2166.0   \n","\n","                           generation fossil oil  generation fossil oil shale  \\\n","time                                                                            \n","2018-12-31 19:00:00+01:00                  178.0                          0.0   \n","2018-12-31 20:00:00+01:00                  174.0                          0.0   \n","2018-12-31 21:00:00+01:00                  168.0                          0.0   \n","2018-12-31 22:00:00+01:00                  163.0                          0.0   \n","2018-12-31 23:00:00+01:00                  163.0                          0.0   \n","\n","                           generation fossil peat  generation geothermal  \\\n","time                                                                       \n","2018-12-31 19:00:00+01:00                     0.0                    0.0   \n","2018-12-31 20:00:00+01:00                     0.0                    0.0   \n","2018-12-31 21:00:00+01:00                     0.0                    0.0   \n","2018-12-31 22:00:00+01:00                     0.0                    0.0   \n","2018-12-31 23:00:00+01:00                     0.0                    0.0   \n","\n","                           generation hydro pumped storage aggregated  ...  \\\n","time                                                                   ...   \n","2018-12-31 19:00:00+01:00                                         NaN  ...   \n","2018-12-31 20:00:00+01:00                                         NaN  ...   \n","2018-12-31 21:00:00+01:00                                         NaN  ...   \n","2018-12-31 22:00:00+01:00                                         NaN  ...   \n","2018-12-31 23:00:00+01:00                                         NaN  ...   \n","\n","                           generation waste  generation wind offshore  \\\n","time                                                                    \n","2018-12-31 19:00:00+01:00             277.0                       0.0   \n","2018-12-31 20:00:00+01:00             280.0                       0.0   \n","2018-12-31 21:00:00+01:00             286.0                       0.0   \n","2018-12-31 22:00:00+01:00             287.0                       0.0   \n","2018-12-31 23:00:00+01:00             287.0                       0.0   \n","\n","                           generation wind onshore  forecast solar day ahead  \\\n","time                                                                           \n","2018-12-31 19:00:00+01:00                   3113.0                      96.0   \n","2018-12-31 20:00:00+01:00                   3288.0                      51.0   \n","2018-12-31 21:00:00+01:00                   3503.0                      36.0   \n","2018-12-31 22:00:00+01:00                   3586.0                      29.0   \n","2018-12-31 23:00:00+01:00                   3651.0                      26.0   \n","\n","                           forecast wind offshore eday ahead  \\\n","time                                                           \n","2018-12-31 19:00:00+01:00                                NaN   \n","2018-12-31 20:00:00+01:00                                NaN   \n","2018-12-31 21:00:00+01:00                                NaN   \n","2018-12-31 22:00:00+01:00                                NaN   \n","2018-12-31 23:00:00+01:00                                NaN   \n","\n","                           forecast wind onshore day ahead  \\\n","time                                                         \n","2018-12-31 19:00:00+01:00                           3253.0   \n","2018-12-31 20:00:00+01:00                           3353.0   \n","2018-12-31 21:00:00+01:00                           3404.0   \n","2018-12-31 22:00:00+01:00                           3273.0   \n","2018-12-31 23:00:00+01:00                           3117.0   \n","\n","                           total load forecast  total load actual  \\\n","time                                                                \n","2018-12-31 19:00:00+01:00              30619.0            30653.0   \n","2018-12-31 20:00:00+01:00              29932.0            29735.0   \n","2018-12-31 21:00:00+01:00              27903.0            28071.0   \n","2018-12-31 22:00:00+01:00              25450.0            25801.0   \n","2018-12-31 23:00:00+01:00              24424.0            24455.0   \n","\n","                           price day ahead  price actual  \n","time                                                      \n","2018-12-31 19:00:00+01:00            68.85         77.02  \n","2018-12-31 20:00:00+01:00            68.40         76.16  \n","2018-12-31 21:00:00+01:00            66.88         74.30  \n","2018-12-31 22:00:00+01:00            63.93         69.89  \n","2018-12-31 23:00:00+01:00            64.27         69.88  \n","\n","[5 rows x 28 columns]"],"text/html":["\n","  <div id=\"df-c792bcbb-ef7b-4534-953a-cb15006e3e78\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>generation biomass</th>\n","      <th>generation fossil brown coal/lignite</th>\n","      <th>generation fossil coal-derived gas</th>\n","      <th>generation fossil gas</th>\n","      <th>generation fossil hard coal</th>\n","      <th>generation fossil oil</th>\n","      <th>generation fossil oil shale</th>\n","      <th>generation fossil peat</th>\n","      <th>generation geothermal</th>\n","      <th>generation hydro pumped storage aggregated</th>\n","      <th>...</th>\n","      <th>generation waste</th>\n","      <th>generation wind offshore</th>\n","      <th>generation wind onshore</th>\n","      <th>forecast solar day ahead</th>\n","      <th>forecast wind offshore eday ahead</th>\n","      <th>forecast wind onshore day ahead</th>\n","      <th>total load forecast</th>\n","      <th>total load actual</th>\n","      <th>price day ahead</th>\n","      <th>price actual</th>\n","    </tr>\n","    <tr>\n","      <th>time</th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>2018-12-31 19:00:00+01:00</th>\n","      <td>297.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>7634.0</td>\n","      <td>2628.0</td>\n","      <td>178.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>NaN</td>\n","      <td>...</td>\n","      <td>277.0</td>\n","      <td>0.0</td>\n","      <td>3113.0</td>\n","      <td>96.0</td>\n","      <td>NaN</td>\n","      <td>3253.0</td>\n","      <td>30619.0</td>\n","      <td>30653.0</td>\n","      <td>68.85</td>\n","      <td>77.02</td>\n","    </tr>\n","    <tr>\n","      <th>2018-12-31 20:00:00+01:00</th>\n","      <td>296.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>7241.0</td>\n","      <td>2566.0</td>\n","      <td>174.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>NaN</td>\n","      <td>...</td>\n","      <td>280.0</td>\n","      <td>0.0</td>\n","      <td>3288.0</td>\n","      <td>51.0</td>\n","      <td>NaN</td>\n","      <td>3353.0</td>\n","      <td>29932.0</td>\n","      <td>29735.0</td>\n","      <td>68.40</td>\n","      <td>76.16</td>\n","    </tr>\n","    <tr>\n","      <th>2018-12-31 21:00:00+01:00</th>\n","      <td>292.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>7025.0</td>\n","      <td>2422.0</td>\n","      <td>168.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>NaN</td>\n","      <td>...</td>\n","      <td>286.0</td>\n","      <td>0.0</td>\n","      <td>3503.0</td>\n","      <td>36.0</td>\n","      <td>NaN</td>\n","      <td>3404.0</td>\n","      <td>27903.0</td>\n","      <td>28071.0</td>\n","      <td>66.88</td>\n","      <td>74.30</td>\n","    </tr>\n","    <tr>\n","      <th>2018-12-31 22:00:00+01:00</th>\n","      <td>293.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>6562.0</td>\n","      <td>2293.0</td>\n","      <td>163.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>NaN</td>\n","      <td>...</td>\n","      <td>287.0</td>\n","      <td>0.0</td>\n","      <td>3586.0</td>\n","      <td>29.0</td>\n","      <td>NaN</td>\n","      <td>3273.0</td>\n","      <td>25450.0</td>\n","      <td>25801.0</td>\n","      <td>63.93</td>\n","      <td>69.89</td>\n","    </tr>\n","    <tr>\n","      <th>2018-12-31 23:00:00+01:00</th>\n","      <td>290.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>6926.0</td>\n","      <td>2166.0</td>\n","      <td>163.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>NaN</td>\n","      <td>...</td>\n","      <td>287.0</td>\n","      <td>0.0</td>\n","      <td>3651.0</td>\n","      <td>26.0</td>\n","      <td>NaN</td>\n","      <td>3117.0</td>\n","      <td>24424.0</td>\n","      <td>24455.0</td>\n","      <td>64.27</td>\n","      <td>69.88</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>5 rows × 28 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-c792bcbb-ef7b-4534-953a-cb15006e3e78')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-c792bcbb-ef7b-4534-953a-cb15006e3e78 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-c792bcbb-ef7b-4534-953a-cb15006e3e78');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":74}]},{"cell_type":"code","source":["df.shape"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"hSYxSPQ3X02L","executionInfo":{"status":"ok","timestamp":1674289469561,"user_tz":-420,"elapsed":27,"user":{"displayName":"Fanny F","userId":"11831095778884674749"}},"outputId":"b2d64ed1-b7f9-4e5f-93a2-a67fd5420f56"},"execution_count":75,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(35064, 28)"]},"metadata":{},"execution_count":75}]},{"cell_type":"code","source":["df.info()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"4Iz9BJkyit5D","executionInfo":{"status":"ok","timestamp":1674289469563,"user_tz":-420,"elapsed":21,"user":{"displayName":"Fanny F","userId":"11831095778884674749"}},"outputId":"e7b3d5ae-2f9a-49b3-e985-1be00875e9f2"},"execution_count":76,"outputs":[{"output_type":"stream","name":"stdout","text":["<class 'pandas.core.frame.DataFrame'>\n","Index: 35064 entries, 2015-01-01 00:00:00+01:00 to 2018-12-31 23:00:00+01:00\n","Data columns (total 28 columns):\n"," #   Column                                       Non-Null Count  Dtype  \n","---  ------                                       --------------  -----  \n"," 0   generation biomass                           35045 non-null  float64\n"," 1   generation fossil brown coal/lignite         35046 non-null  float64\n"," 2   generation fossil coal-derived gas           35046 non-null  float64\n"," 3   generation fossil gas                        35046 non-null  float64\n"," 4   generation fossil hard coal                  35046 non-null  float64\n"," 5   generation fossil oil                        35045 non-null  float64\n"," 6   generation fossil oil shale                  35046 non-null  float64\n"," 7   generation fossil peat                       35046 non-null  float64\n"," 8   generation geothermal                        35046 non-null  float64\n"," 9   generation hydro pumped storage aggregated   0 non-null      float64\n"," 10  generation hydro pumped storage consumption  35045 non-null  float64\n"," 11  generation hydro run-of-river and poundage   35045 non-null  float64\n"," 12  generation hydro water reservoir             35046 non-null  float64\n"," 13  generation marine                            35045 non-null  float64\n"," 14  generation nuclear                           35047 non-null  float64\n"," 15  generation other                             35046 non-null  float64\n"," 16  generation other renewable                   35046 non-null  float64\n"," 17  generation solar                             35046 non-null  float64\n"," 18  generation waste                             35045 non-null  float64\n"," 19  generation wind offshore                     35046 non-null  float64\n"," 20  generation wind onshore                      35046 non-null  float64\n"," 21  forecast solar day ahead                     35064 non-null  float64\n"," 22  forecast wind offshore eday ahead            0 non-null      float64\n"," 23  forecast wind onshore day ahead              35064 non-null  float64\n"," 24  total load forecast                          35064 non-null  float64\n"," 25  total load actual                            35028 non-null  float64\n"," 26  price day ahead                              35064 non-null  float64\n"," 27  price actual                                 35064 non-null  float64\n","dtypes: float64(28)\n","memory usage: 7.8+ MB\n"]}]},{"cell_type":"code","source":["df.describe()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":463},"id":"xOgaijVBcElb","executionInfo":{"status":"ok","timestamp":1674289470147,"user_tz":-420,"elapsed":29,"user":{"displayName":"Fanny F","userId":"11831095778884674749"}},"outputId":"68983c18-248a-407e-cbc4-995d9563bd34"},"execution_count":77,"outputs":[{"output_type":"execute_result","data":{"text/plain":["       generation biomass  generation fossil brown coal/lignite  \\\n","count        35045.000000                          35046.000000   \n","mean           383.513540                            448.059208   \n","std             85.353943                            354.568590   \n","min              0.000000                              0.000000   \n","25%            333.000000                              0.000000   \n","50%            367.000000                            509.000000   \n","75%            433.000000                            757.000000   \n","max            592.000000                            999.000000   \n","\n","       generation fossil coal-derived gas  generation fossil gas  \\\n","count                             35046.0           35046.000000   \n","mean                                  0.0            5622.737488   \n","std                                   0.0            2201.830478   \n","min                                   0.0               0.000000   \n","25%                                   0.0            4126.000000   \n","50%                                   0.0            4969.000000   \n","75%                                   0.0            6429.000000   \n","max                                   0.0           20034.000000   \n","\n","       generation fossil hard coal  generation fossil oil  \\\n","count                 35046.000000           35045.000000   \n","mean                   4256.065742             298.319789   \n","std                    1961.601013              52.520673   \n","min                       0.000000               0.000000   \n","25%                    2527.000000             263.000000   \n","50%                    4474.000000             300.000000   \n","75%                    5838.750000             330.000000   \n","max                    8359.000000             449.000000   \n","\n","       generation fossil oil shale  generation fossil peat  \\\n","count                      35046.0                 35046.0   \n","mean                           0.0                     0.0   \n","std                            0.0                     0.0   \n","min                            0.0                     0.0   \n","25%                            0.0                     0.0   \n","50%                            0.0                     0.0   \n","75%                            0.0                     0.0   \n","max                            0.0                     0.0   \n","\n","       generation geothermal  generation hydro pumped storage aggregated  ...  \\\n","count                35046.0                                         0.0  ...   \n","mean                     0.0                                         NaN  ...   \n","std                      0.0                                         NaN  ...   \n","min                      0.0                                         NaN  ...   \n","25%                      0.0                                         NaN  ...   \n","50%                      0.0                                         NaN  ...   \n","75%                      0.0                                         NaN  ...   \n","max                      0.0                                         NaN  ...   \n","\n","       generation waste  generation wind offshore  generation wind onshore  \\\n","count      35045.000000                   35046.0             35046.000000   \n","mean         269.452133                       0.0              5464.479769   \n","std           50.195536                       0.0              3213.691587   \n","min            0.000000                       0.0                 0.000000   \n","25%          240.000000                       0.0              2933.000000   \n","50%          279.000000                       0.0              4849.000000   \n","75%          310.000000                       0.0              7398.000000   \n","max          357.000000                       0.0             17436.000000   \n","\n","       forecast solar day ahead  forecast wind offshore eday ahead  \\\n","count              35064.000000                                0.0   \n","mean                1439.066735                                NaN   \n","std                 1677.703355                                NaN   \n","min                    0.000000                                NaN   \n","25%                   69.000000                                NaN   \n","50%                  576.000000                                NaN   \n","75%                 2636.000000                                NaN   \n","max                 5836.000000                                NaN   \n","\n","       forecast wind onshore day ahead  total load forecast  \\\n","count                     35064.000000         35064.000000   \n","mean                       5471.216689         28712.129962   \n","std                        3176.312853          4594.100854   \n","min                         237.000000         18105.000000   \n","25%                        2979.000000         24793.750000   \n","50%                        4855.000000         28906.000000   \n","75%                        7353.000000         32263.250000   \n","max                       17430.000000         41390.000000   \n","\n","       total load actual  price day ahead  price actual  \n","count       35028.000000     35064.000000  35064.000000  \n","mean        28696.939905        49.874341     57.884023  \n","std          4574.987950        14.618900     14.204083  \n","min         18041.000000         2.060000      9.330000  \n","25%         24807.750000        41.490000     49.347500  \n","50%         28901.000000        50.520000     58.020000  \n","75%         32192.000000        60.530000     68.010000  \n","max         41015.000000       101.990000    116.800000  \n","\n","[8 rows x 28 columns]"],"text/html":["\n","  <div id=\"df-6ae8e5ed-6c8d-4423-91e9-a3224dbe4556\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>generation biomass</th>\n","      <th>generation fossil brown coal/lignite</th>\n","      <th>generation fossil coal-derived gas</th>\n","      <th>generation fossil gas</th>\n","      <th>generation fossil hard coal</th>\n","      <th>generation fossil oil</th>\n","      <th>generation fossil oil shale</th>\n","      <th>generation fossil peat</th>\n","      <th>generation geothermal</th>\n","      <th>generation hydro pumped storage aggregated</th>\n","      <th>...</th>\n","      <th>generation waste</th>\n","      <th>generation wind offshore</th>\n","      <th>generation wind onshore</th>\n","      <th>forecast solar day ahead</th>\n","      <th>forecast wind offshore eday ahead</th>\n","      <th>forecast wind onshore day ahead</th>\n","      <th>total load forecast</th>\n","      <th>total load actual</th>\n","      <th>price day ahead</th>\n","      <th>price actual</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>count</th>\n","      <td>35045.000000</td>\n","      <td>35046.000000</td>\n","      <td>35046.0</td>\n","      <td>35046.000000</td>\n","      <td>35046.000000</td>\n","      <td>35045.000000</td>\n","      <td>35046.0</td>\n","      <td>35046.0</td>\n","      <td>35046.0</td>\n","      <td>0.0</td>\n","      <td>...</td>\n","      <td>35045.000000</td>\n","      <td>35046.0</td>\n","      <td>35046.000000</td>\n","      <td>35064.000000</td>\n","      <td>0.0</td>\n","      <td>35064.000000</td>\n","      <td>35064.000000</td>\n","      <td>35028.000000</td>\n","      <td>35064.000000</td>\n","      <td>35064.000000</td>\n","    </tr>\n","    <tr>\n","      <th>mean</th>\n","      <td>383.513540</td>\n","      <td>448.059208</td>\n","      <td>0.0</td>\n","      <td>5622.737488</td>\n","      <td>4256.065742</td>\n","      <td>298.319789</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>NaN</td>\n","      <td>...</td>\n","      <td>269.452133</td>\n","      <td>0.0</td>\n","      <td>5464.479769</td>\n","      <td>1439.066735</td>\n","      <td>NaN</td>\n","      <td>5471.216689</td>\n","      <td>28712.129962</td>\n","      <td>28696.939905</td>\n","      <td>49.874341</td>\n","      <td>57.884023</td>\n","    </tr>\n","    <tr>\n","      <th>std</th>\n","      <td>85.353943</td>\n","      <td>354.568590</td>\n","      <td>0.0</td>\n","      <td>2201.830478</td>\n","      <td>1961.601013</td>\n","      <td>52.520673</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>NaN</td>\n","      <td>...</td>\n","      <td>50.195536</td>\n","      <td>0.0</td>\n","      <td>3213.691587</td>\n","      <td>1677.703355</td>\n","      <td>NaN</td>\n","      <td>3176.312853</td>\n","      <td>4594.100854</td>\n","      <td>4574.987950</td>\n","      <td>14.618900</td>\n","      <td>14.204083</td>\n","    </tr>\n","    <tr>\n","      <th>min</th>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.0</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>NaN</td>\n","      <td>...</td>\n","      <td>0.000000</td>\n","      <td>0.0</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>NaN</td>\n","      <td>237.000000</td>\n","      <td>18105.000000</td>\n","      <td>18041.000000</td>\n","      <td>2.060000</td>\n","      <td>9.330000</td>\n","    </tr>\n","    <tr>\n","      <th>25%</th>\n","      <td>333.000000</td>\n","      <td>0.000000</td>\n","      <td>0.0</td>\n","      <td>4126.000000</td>\n","      <td>2527.000000</td>\n","      <td>263.000000</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>NaN</td>\n","      <td>...</td>\n","      <td>240.000000</td>\n","      <td>0.0</td>\n","      <td>2933.000000</td>\n","      <td>69.000000</td>\n","      <td>NaN</td>\n","      <td>2979.000000</td>\n","      <td>24793.750000</td>\n","      <td>24807.750000</td>\n","      <td>41.490000</td>\n","      <td>49.347500</td>\n","    </tr>\n","    <tr>\n","      <th>50%</th>\n","      <td>367.000000</td>\n","      <td>509.000000</td>\n","      <td>0.0</td>\n","      <td>4969.000000</td>\n","      <td>4474.000000</td>\n","      <td>300.000000</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>NaN</td>\n","      <td>...</td>\n","      <td>279.000000</td>\n","      <td>0.0</td>\n","      <td>4849.000000</td>\n","      <td>576.000000</td>\n","      <td>NaN</td>\n","      <td>4855.000000</td>\n","      <td>28906.000000</td>\n","      <td>28901.000000</td>\n","      <td>50.520000</td>\n","      <td>58.020000</td>\n","    </tr>\n","    <tr>\n","      <th>75%</th>\n","      <td>433.000000</td>\n","      <td>757.000000</td>\n","      <td>0.0</td>\n","      <td>6429.000000</td>\n","      <td>5838.750000</td>\n","      <td>330.000000</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>NaN</td>\n","      <td>...</td>\n","      <td>310.000000</td>\n","      <td>0.0</td>\n","      <td>7398.000000</td>\n","      <td>2636.000000</td>\n","      <td>NaN</td>\n","      <td>7353.000000</td>\n","      <td>32263.250000</td>\n","      <td>32192.000000</td>\n","      <td>60.530000</td>\n","      <td>68.010000</td>\n","    </tr>\n","    <tr>\n","      <th>max</th>\n","      <td>592.000000</td>\n","      <td>999.000000</td>\n","      <td>0.0</td>\n","      <td>20034.000000</td>\n","      <td>8359.000000</td>\n","      <td>449.000000</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>NaN</td>\n","      <td>...</td>\n","      <td>357.000000</td>\n","      <td>0.0</td>\n","      <td>17436.000000</td>\n","      <td>5836.000000</td>\n","      <td>NaN</td>\n","      <td>17430.000000</td>\n","      <td>41390.000000</td>\n","      <td>41015.000000</td>\n","      <td>101.990000</td>\n","      <td>116.800000</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>8 rows × 28 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-6ae8e5ed-6c8d-4423-91e9-a3224dbe4556')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-6ae8e5ed-6c8d-4423-91e9-a3224dbe4556 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-6ae8e5ed-6c8d-4423-91e9-a3224dbe4556');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":77}]},{"cell_type":"code","source":["# Jumlah missing value\n","df.isnull().sum()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"ka-TOK5UX6Dq","executionInfo":{"status":"ok","timestamp":1674289470149,"user_tz":-420,"elapsed":28,"user":{"displayName":"Fanny F","userId":"11831095778884674749"}},"outputId":"77a313f6-f57c-4f2f-c051-79a11d69b950"},"execution_count":78,"outputs":[{"output_type":"execute_result","data":{"text/plain":["generation biomass                                19\n","generation fossil brown coal/lignite              18\n","generation fossil coal-derived gas                18\n","generation fossil gas                             18\n","generation fossil hard coal                       18\n","generation fossil oil                             19\n","generation fossil oil shale                       18\n","generation fossil peat                            18\n","generation geothermal                             18\n","generation hydro pumped storage aggregated     35064\n","generation hydro pumped storage consumption       19\n","generation hydro run-of-river and poundage        19\n","generation hydro water reservoir                  18\n","generation marine                                 19\n","generation nuclear                                17\n","generation other                                  18\n","generation other renewable                        18\n","generation solar                                  18\n","generation waste                                  19\n","generation wind offshore                          18\n","generation wind onshore                           18\n","forecast solar day ahead                           0\n","forecast wind offshore eday ahead              35064\n","forecast wind onshore day ahead                    0\n","total load forecast                                0\n","total load actual                                 36\n","price day ahead                                    0\n","price actual                                       0\n","dtype: int64"]},"metadata":{},"execution_count":78}]},{"cell_type":"code","source":["# df = df['PJME_MW'].resample('D').sum()\n","df['total load actual'].plot()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":295},"id":"0QFPFg_Vcy_7","executionInfo":{"status":"ok","timestamp":1674289470699,"user_tz":-420,"elapsed":573,"user":{"displayName":"Fanny F","userId":"11831095778884674749"}},"outputId":"d78da5be-0db7-46cd-8f08-bcdf425b4107"},"execution_count":79,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<matplotlib.axes._subplots.AxesSubplot at 0x7fc20cca1580>"]},"metadata":{},"execution_count":79},{"output_type":"display_data","data":{"text/plain":["<Figure size 432x288 with 1 Axes>"],"image/png":"\n"},"metadata":{"needs_background":"light"}}]},{"cell_type":"code","source":["# Correlation matrix\n","df.corr()['total load actual']"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"EU0I4AB7dpTS","executionInfo":{"status":"ok","timestamp":1674289471119,"user_tz":-420,"elapsed":435,"user":{"displayName":"Fanny F","userId":"11831095778884674749"}},"outputId":"fed6263b-7867-47b1-ec89-8492a3cddaeb"},"execution_count":80,"outputs":[{"output_type":"execute_result","data":{"text/plain":["generation biomass                             0.083288\n","generation fossil brown coal/lignite           0.280461\n","generation fossil coal-derived gas                  NaN\n","generation fossil gas                          0.548913\n","generation fossil hard coal                    0.396564\n","generation fossil oil                          0.497089\n","generation fossil oil shale                         NaN\n","generation fossil peat                              NaN\n","generation geothermal                               NaN\n","generation hydro pumped storage aggregated          NaN\n","generation hydro pumped storage consumption   -0.562809\n","generation hydro run-of-river and poundage     0.118570\n","generation hydro water reservoir               0.479481\n","generation marine                                   NaN\n","generation nuclear                             0.085664\n","generation other                               0.100690\n","generation other renewable                     0.181714\n","generation solar                               0.396189\n","generation waste                               0.077312\n","generation wind offshore                            NaN\n","generation wind onshore                        0.040080\n","forecast solar day ahead                       0.404362\n","forecast wind offshore eday ahead                   NaN\n","forecast wind onshore day ahead                0.037597\n","total load forecast                            0.995139\n","total load actual                              1.000000\n","price day ahead                                0.473869\n","price actual                                   0.436127\n","Name: total load actual, dtype: float64"]},"metadata":{},"execution_count":80}]},{"cell_type":"code","source":["# All\n","# df = df.drop(['generation hydro pumped storage aggregated', 'forecast wind offshore eday ahead', 'total load forecast', 'price day ahead'], axis=1)\n","\n","# No Minus / NaN\n","# df = df.drop(df.columns[[3, 7, 8, 9, 10, 11, 14, 20, 23, 25, 27]], axis=1)\n","\n","# Top 5\n","df = df.drop(['generation biomass', 'generation fossil brown coal/lignite', 'generation fossil coal-derived gas', 'generation fossil hard coal','generation fossil oil shale',\n","'generation fossil peat',                            \n","'generation geothermal' ,                            \n","'generation hydro pumped storage aggregated',     \n","'generation hydro pumped storage consumption',       \n","'generation hydro run-of-river and poundage',                         \n","'generation marine',                                 \n","'generation nuclear',                                \n","'generation other',                                  \n","'generation other renewable',                        \n","'generation solar',                                  \n","'generation waste',                                  \n","'generation wind offshore',                         \n","'generation wind onshore',                                                     \n","'forecast wind onshore day ahead', \n","'forecast wind offshore eday ahead',                  \n","'total load forecast',                                                               \n","'price day ahead'], axis=1)"],"metadata":{"id":"9Bw9T7q1fBS6","executionInfo":{"status":"ok","timestamp":1674289471120,"user_tz":-420,"elapsed":58,"user":{"displayName":"Fanny F","userId":"11831095778884674749"}}},"execution_count":81,"outputs":[]},{"cell_type":"code","source":["df.info()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"xPaR8IcffDRV","executionInfo":{"status":"ok","timestamp":1674289471128,"user_tz":-420,"elapsed":66,"user":{"displayName":"Fanny F","userId":"11831095778884674749"}},"outputId":"927cfa7e-cee0-442c-fc87-829c25e7e480"},"execution_count":82,"outputs":[{"output_type":"stream","name":"stdout","text":["<class 'pandas.core.frame.DataFrame'>\n","Index: 35064 entries, 2015-01-01 00:00:00+01:00 to 2018-12-31 23:00:00+01:00\n","Data columns (total 6 columns):\n"," #   Column                            Non-Null Count  Dtype  \n","---  ------                            --------------  -----  \n"," 0   generation fossil gas             35046 non-null  float64\n"," 1   generation fossil oil             35045 non-null  float64\n"," 2   generation hydro water reservoir  35046 non-null  float64\n"," 3   forecast solar day ahead          35064 non-null  float64\n"," 4   total load actual                 35028 non-null  float64\n"," 5   price actual                      35064 non-null  float64\n","dtypes: float64(6)\n","memory usage: 1.9+ MB\n"]}]},{"cell_type":"code","source":["values = df.values"],"metadata":{"id":"5jHjWBtIYkxM","executionInfo":{"status":"ok","timestamp":1674289471133,"user_tz":-420,"elapsed":67,"user":{"displayName":"Fanny F","userId":"11831095778884674749"}}},"execution_count":83,"outputs":[]},{"cell_type":"code","source":["values.shape"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"RRMr6GqHYoNw","executionInfo":{"status":"ok","timestamp":1674289471135,"user_tz":-420,"elapsed":68,"user":{"displayName":"Fanny F","userId":"11831095778884674749"}},"outputId":"6017f4a0-d878-496e-bd3d-5d47e29dbeec"},"execution_count":84,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(35064, 6)"]},"metadata":{},"execution_count":84}]},{"cell_type":"markdown","source":["## Normalisasi"],"metadata":{"id":"hs4MPx1cYyvt"}},{"cell_type":"code","source":["# Normalize\n","scaler = MinMaxScaler(feature_range=(0, 1))\n","scaled = scaler.fit_transform(values)"],"metadata":{"id":"H-S1jP2luyG7","executionInfo":{"status":"ok","timestamp":1674289471140,"user_tz":-420,"elapsed":70,"user":{"displayName":"Fanny F","userId":"11831095778884674749"}}},"execution_count":85,"outputs":[]},{"cell_type":"code","source":["#covert to time-series\n","def series_to_supervised(data, n_in=1, n_out=1, dropnan=True):\n","\tn_vars = 1 if type(data) is list else data.shape[1]\n","\tdf = DataFrame(data)\n","\tcols, names = list(), list()\n","\t# input sequence (t-n, ... t-1)\n","\tfor i in range(n_in, 0, -1):\n","\t\tcols.append(df.shift(i))\n","\t\tnames += [('var%d(t-%d)' % (j+1, i)) for j in range(n_vars)]\n","\t# forecast sequence (t, t+1, ... t+n)\n","\tfor i in range(0, n_out):\n","\t\tcols.append(df.shift(-i))\n","\t\tif i == 0:\n","\t\t\tnames += [('var%d(t)' % (j+1)) for j in range(n_vars)]\n","\t\telse:\n","\t\t\tnames += [('var%d(t+%d)' % (j+1, i)) for j in range(n_vars)]\n","\t# put it all together\n","\tagg = concat(cols, axis=1)\n","\tagg.columns = names\n","\t# drop rows with NaN values\n","\tif dropnan:\n","\t\tagg.dropna(inplace=True)\n","\treturn agg"],"metadata":{"id":"xVjwWI0mY9JV","executionInfo":{"status":"ok","timestamp":1674289471142,"user_tz":-420,"elapsed":70,"user":{"displayName":"Fanny F","userId":"11831095778884674749"}}},"execution_count":86,"outputs":[]},{"cell_type":"code","source":["reframed = series_to_supervised(scaled, 1, 1)\n","reframed.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":270},"id":"PSAdZ5oIY--h","executionInfo":{"status":"ok","timestamp":1674289471144,"user_tz":-420,"elapsed":71,"user":{"displayName":"Fanny F","userId":"11831095778884674749"}},"outputId":"20a86b9e-730a-4082-adc8-616f27bc1168"},"execution_count":87,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   var1(t-1)  var2(t-1)  var3(t-1)  var4(t-1)  var5(t-1)  var6(t-1)   var1(t)  \\\n","1   0.241789   0.360802   0.195210   0.002913   0.319666   0.521820  0.259359   \n","2   0.259359   0.351893   0.170436   0.002742   0.276008   0.517261  0.242438   \n","3   0.242438   0.349666   0.140933   0.001371   0.204274   0.513166  0.215334   \n","4   0.215334   0.356347   0.080078   0.000343   0.141247   0.465153  0.206150   \n","5   0.206150   0.347439   0.074013   0.001542   0.096762   0.434633  0.201557   \n","\n","    var2(t)   var3(t)   var4(t)   var5(t)   var6(t)  \n","1  0.351893  0.170436  0.002742  0.276008  0.517261  \n","2  0.349666  0.140933  0.001371  0.204274  0.513166  \n","3  0.356347  0.080078  0.000343  0.141247  0.465153  \n","4  0.347439  0.074013  0.001542  0.096762  0.434633  \n","5  0.347439  0.076377  0.000685  0.081135  0.412208  "],"text/html":["\n","  <div id=\"df-b43cc553-0ebc-4f9e-bef9-d5d97a64c1c8\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>var1(t-1)</th>\n","      <th>var2(t-1)</th>\n","      <th>var3(t-1)</th>\n","      <th>var4(t-1)</th>\n","      <th>var5(t-1)</th>\n","      <th>var6(t-1)</th>\n","      <th>var1(t)</th>\n","      <th>var2(t)</th>\n","      <th>var3(t)</th>\n","      <th>var4(t)</th>\n","      <th>var5(t)</th>\n","      <th>var6(t)</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>1</th>\n","      <td>0.241789</td>\n","      <td>0.360802</td>\n","      <td>0.195210</td>\n","      <td>0.002913</td>\n","      <td>0.319666</td>\n","      <td>0.521820</td>\n","      <td>0.259359</td>\n","      <td>0.351893</td>\n","      <td>0.170436</td>\n","      <td>0.002742</td>\n","      <td>0.276008</td>\n","      <td>0.517261</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>0.259359</td>\n","      <td>0.351893</td>\n","      <td>0.170436</td>\n","      <td>0.002742</td>\n","      <td>0.276008</td>\n","      <td>0.517261</td>\n","      <td>0.242438</td>\n","      <td>0.349666</td>\n","      <td>0.140933</td>\n","      <td>0.001371</td>\n","      <td>0.204274</td>\n","      <td>0.513166</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>0.242438</td>\n","      <td>0.349666</td>\n","      <td>0.140933</td>\n","      <td>0.001371</td>\n","      <td>0.204274</td>\n","      <td>0.513166</td>\n","      <td>0.215334</td>\n","      <td>0.356347</td>\n","      <td>0.080078</td>\n","      <td>0.000343</td>\n","      <td>0.141247</td>\n","      <td>0.465153</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>0.215334</td>\n","      <td>0.356347</td>\n","      <td>0.080078</td>\n","      <td>0.000343</td>\n","      <td>0.141247</td>\n","      <td>0.465153</td>\n","      <td>0.206150</td>\n","      <td>0.347439</td>\n","      <td>0.074013</td>\n","      <td>0.001542</td>\n","      <td>0.096762</td>\n","      <td>0.434633</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>0.206150</td>\n","      <td>0.347439</td>\n","      <td>0.074013</td>\n","      <td>0.001542</td>\n","      <td>0.096762</td>\n","      <td>0.434633</td>\n","      <td>0.201557</td>\n","      <td>0.347439</td>\n","      <td>0.076377</td>\n","      <td>0.000685</td>\n","      <td>0.081135</td>\n","      <td>0.412208</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-b43cc553-0ebc-4f9e-bef9-d5d97a64c1c8')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-b43cc553-0ebc-4f9e-bef9-d5d97a64c1c8 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-b43cc553-0ebc-4f9e-bef9-d5d97a64c1c8');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":87}]},{"cell_type":"code","source":["reframed.shape"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"aU380SUXZAhv","executionInfo":{"status":"ok","timestamp":1674289471144,"user_tz":-420,"elapsed":69,"user":{"displayName":"Fanny F","userId":"11831095778884674749"}},"outputId":"64bc8a45-de29-40cd-b168-9d9775ad58fe"},"execution_count":88,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(34994, 12)"]},"metadata":{},"execution_count":88}]},{"cell_type":"code","source":["reframed.drop(reframed.columns[[-1]], axis=1, inplace=True)"],"metadata":{"id":"fSNaLC5zZB3z","executionInfo":{"status":"ok","timestamp":1674289471145,"user_tz":-420,"elapsed":66,"user":{"displayName":"Fanny F","userId":"11831095778884674749"}}},"execution_count":89,"outputs":[]},{"cell_type":"code","source":["reframed.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":270},"id":"aWfFmpCXZDI4","executionInfo":{"status":"ok","timestamp":1674289471147,"user_tz":-420,"elapsed":67,"user":{"displayName":"Fanny F","userId":"11831095778884674749"}},"outputId":"f8b625c1-34a4-4797-e89f-31fd900c3f53"},"execution_count":90,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   var1(t-1)  var2(t-1)  var3(t-1)  var4(t-1)  var5(t-1)  var6(t-1)   var1(t)  \\\n","1   0.241789   0.360802   0.195210   0.002913   0.319666   0.521820  0.259359   \n","2   0.259359   0.351893   0.170436   0.002742   0.276008   0.517261  0.242438   \n","3   0.242438   0.349666   0.140933   0.001371   0.204274   0.513166  0.215334   \n","4   0.215334   0.356347   0.080078   0.000343   0.141247   0.465153  0.206150   \n","5   0.206150   0.347439   0.074013   0.001542   0.096762   0.434633  0.201557   \n","\n","    var2(t)   var3(t)   var4(t)   var5(t)  \n","1  0.351893  0.170436  0.002742  0.276008  \n","2  0.349666  0.140933  0.001371  0.204274  \n","3  0.356347  0.080078  0.000343  0.141247  \n","4  0.347439  0.074013  0.001542  0.096762  \n","5  0.347439  0.076377  0.000685  0.081135  "],"text/html":["\n","  <div id=\"df-8e06465a-0ab3-4a81-a902-a4dba40f89e6\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>var1(t-1)</th>\n","      <th>var2(t-1)</th>\n","      <th>var3(t-1)</th>\n","      <th>var4(t-1)</th>\n","      <th>var5(t-1)</th>\n","      <th>var6(t-1)</th>\n","      <th>var1(t)</th>\n","      <th>var2(t)</th>\n","      <th>var3(t)</th>\n","      <th>var4(t)</th>\n","      <th>var5(t)</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>1</th>\n","      <td>0.241789</td>\n","      <td>0.360802</td>\n","      <td>0.195210</td>\n","      <td>0.002913</td>\n","      <td>0.319666</td>\n","      <td>0.521820</td>\n","      <td>0.259359</td>\n","      <td>0.351893</td>\n","      <td>0.170436</td>\n","      <td>0.002742</td>\n","      <td>0.276008</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>0.259359</td>\n","      <td>0.351893</td>\n","      <td>0.170436</td>\n","      <td>0.002742</td>\n","      <td>0.276008</td>\n","      <td>0.517261</td>\n","      <td>0.242438</td>\n","      <td>0.349666</td>\n","      <td>0.140933</td>\n","      <td>0.001371</td>\n","      <td>0.204274</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>0.242438</td>\n","      <td>0.349666</td>\n","      <td>0.140933</td>\n","      <td>0.001371</td>\n","      <td>0.204274</td>\n","      <td>0.513166</td>\n","      <td>0.215334</td>\n","      <td>0.356347</td>\n","      <td>0.080078</td>\n","      <td>0.000343</td>\n","      <td>0.141247</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>0.215334</td>\n","      <td>0.356347</td>\n","      <td>0.080078</td>\n","      <td>0.000343</td>\n","      <td>0.141247</td>\n","      <td>0.465153</td>\n","      <td>0.206150</td>\n","      <td>0.347439</td>\n","      <td>0.074013</td>\n","      <td>0.001542</td>\n","      <td>0.096762</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>0.206150</td>\n","      <td>0.347439</td>\n","      <td>0.074013</td>\n","      <td>0.001542</td>\n","      <td>0.096762</td>\n","      <td>0.434633</td>\n","      <td>0.201557</td>\n","      <td>0.347439</td>\n","      <td>0.076377</td>\n","      <td>0.000685</td>\n","      <td>0.081135</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-8e06465a-0ab3-4a81-a902-a4dba40f89e6')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-8e06465a-0ab3-4a81-a902-a4dba40f89e6 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-8e06465a-0ab3-4a81-a902-a4dba40f89e6');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":90}]},{"cell_type":"code","source":["# All\n","# reframed.drop(reframed.columns[[x for x in range(24, 46)]], axis=1, inplace=True)\n","\n","# No Minus / NaN\n","# reframed.drop(reframed.columns[[x for x in range(17, 32)]], axis=1, inplace=True)\n","\n","# Top 5\n","reframed.drop(reframed.columns[[x for x in range(6, 10)]], axis=1, inplace=True)"],"metadata":{"id":"PMcQe2WIZEtE","executionInfo":{"status":"ok","timestamp":1674289471148,"user_tz":-420,"elapsed":66,"user":{"displayName":"Fanny F","userId":"11831095778884674749"}}},"execution_count":91,"outputs":[]},{"cell_type":"code","source":["reframed.columns"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"0NGt1HAzZSph","executionInfo":{"status":"ok","timestamp":1674289471150,"user_tz":-420,"elapsed":67,"user":{"displayName":"Fanny F","userId":"11831095778884674749"}},"outputId":"8b998f60-b9a4-44e2-dae9-7b68e00f2735"},"execution_count":92,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Index(['var1(t-1)', 'var2(t-1)', 'var3(t-1)', 'var4(t-1)', 'var5(t-1)',\n","       'var6(t-1)', 'var5(t)'],\n","      dtype='object')"]},"metadata":{},"execution_count":92}]},{"cell_type":"code","source":["#split into train and test sets\n","values = reframed.values\n","# n_train = round(values.shape[0])\n","\n","train = values[:, :]\n","test = values[:, :]"],"metadata":{"id":"nUpfHK-yZZTK","executionInfo":{"status":"ok","timestamp":1674289471151,"user_tz":-420,"elapsed":64,"user":{"displayName":"Fanny F","userId":"11831095778884674749"}}},"execution_count":93,"outputs":[]},{"cell_type":"code","source":["train_X, train_y = train[:, :-1], train[:, -1]\n","test_X, test_y = test[:, :-1], test[:, -1]"],"metadata":{"id":"Jr3kEPUJZcTr","executionInfo":{"status":"ok","timestamp":1674289471152,"user_tz":-420,"elapsed":65,"user":{"displayName":"Fanny F","userId":"11831095778884674749"}}},"execution_count":94,"outputs":[]},{"cell_type":"code","source":["#reshap input menjadi 3D ([)samples, timesteps, features)\n","train_X = train_X.reshape((train_X.shape[0], 1, train_X.shape[1]))\n","test_X = test_X.reshape((test_X.shape[0], 1, test_X.shape[1]))"],"metadata":{"id":"PvPfuKWLZd0a","executionInfo":{"status":"ok","timestamp":1674289471152,"user_tz":-420,"elapsed":63,"user":{"displayName":"Fanny F","userId":"11831095778884674749"}}},"execution_count":95,"outputs":[]},{"cell_type":"code","source":["hl = [50,45]\n","lr = 1e-3\n","batch_size = 128\n","num_epochs = 100"],"metadata":{"id":"fr-HLhdOaAnr","executionInfo":{"status":"ok","timestamp":1674289471153,"user_tz":-420,"elapsed":63,"user":{"displayName":"Fanny F","userId":"11831095778884674749"}}},"execution_count":96,"outputs":[]},{"cell_type":"code","source":["# Adding Layers to the model\n","model = Sequential()\n","model.add(SimpleRNN(train_X.shape[2],input_shape = (train_X.shape[1],train_X.shape[2]),return_sequences = True, \n","                    activation = 'relu'))\n","for i in range(len(hl)-1):        \n","        model.add(SimpleRNN(hl[i],activation = 'relu',return_sequences = True))\n","model.add(SimpleRNN(hl[-1],activation = 'relu'))\n","model.add(Dense(1))\n","model.compile(optimizer = optimizers.Adam(lr = lr), loss = 'mean_squared_error')\n","print(model.summary())"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"OsGZfF0hZkVa","executionInfo":{"status":"ok","timestamp":1674289471478,"user_tz":-420,"elapsed":388,"user":{"displayName":"Fanny F","userId":"11831095778884674749"}},"outputId":"307280a2-5672-47bb-e976-28ca88b4d531"},"execution_count":97,"outputs":[{"output_type":"stream","name":"stdout","text":["Model: \"sequential_2\"\n","_________________________________________________________________\n"," Layer (type)                Output Shape              Param #   \n","=================================================================\n"," simple_rnn_3 (SimpleRNN)    (None, 1, 6)              78        \n","                                                                 \n"," simple_rnn_4 (SimpleRNN)    (None, 1, 50)             2850      \n","                                                                 \n"," simple_rnn_5 (SimpleRNN)    (None, 45)                4320      \n","                                                                 \n"," dense_1 (Dense)             (None, 1)                 46        \n","                                                                 \n","=================================================================\n","Total params: 7,294\n","Trainable params: 7,294\n","Non-trainable params: 0\n","_________________________________________________________________\n","None\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.8/dist-packages/keras/optimizers/optimizer_v2/adam.py:110: UserWarning: The `lr` argument is deprecated, use `learning_rate` instead.\n","  super(Adam, self).__init__(name, **kwargs)\n"]}]},{"cell_type":"code","source":["# Training the data\n","start = time.time()\n","# history = model.fit(train_X, train_y, epochs=100, batch_size=128, validation_data=(test_X, test_y), verbose=1, shuffle=False)\n","history = model.fit(train_X,train_y,epochs = 100,batch_size = 128,validation_data = (test_X, test_y),verbose = 1,\n","                        shuffle = False) #, callbacks=callbacks_list)\n","end = time.time()\n","processingTime = 'Processing Time {} seconds.'.format(end-start)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"4hhSKxeCZ3m7","executionInfo":{"status":"ok","timestamp":1674289675918,"user_tz":-420,"elapsed":204448,"user":{"displayName":"Fanny F","userId":"11831095778884674749"}},"outputId":"2ad070f9-0867-4dd3-e1d4-d185ea7a21b9"},"execution_count":98,"outputs":[{"output_type":"stream","name":"stdout","text":["Epoch 1/100\n","274/274 [==============================] - 5s 9ms/step - loss: 0.0138 - val_loss: 0.0048\n","Epoch 2/100\n","274/274 [==============================] - 2s 7ms/step - loss: 0.0046 - val_loss: 0.0047\n","Epoch 3/100\n","274/274 [==============================] - 2s 6ms/step - loss: 0.0043 - val_loss: 0.0045\n","Epoch 4/100\n","274/274 [==============================] - 2s 7ms/step - loss: 0.0041 - val_loss: 0.0042\n","Epoch 5/100\n","274/274 [==============================] - 2s 7ms/step - loss: 0.0040 - val_loss: 0.0040\n","Epoch 6/100\n","274/274 [==============================] - 2s 6ms/step - loss: 0.0039 - val_loss: 0.0038\n","Epoch 7/100\n","274/274 [==============================] - 3s 10ms/step - loss: 0.0039 - val_loss: 0.0038\n","Epoch 8/100\n","274/274 [==============================] - 2s 7ms/step - loss: 0.0038 - val_loss: 0.0038\n","Epoch 9/100\n","274/274 [==============================] - 2s 7ms/step - loss: 0.0038 - val_loss: 0.0038\n","Epoch 10/100\n","274/274 [==============================] - 2s 6ms/step - loss: 0.0038 - val_loss: 0.0038\n","Epoch 11/100\n","274/274 [==============================] - 2s 7ms/step - loss: 0.0038 - val_loss: 0.0038\n","Epoch 12/100\n","274/274 [==============================] - 2s 6ms/step - loss: 0.0038 - val_loss: 0.0039\n","Epoch 13/100\n","274/274 [==============================] - 2s 6ms/step - loss: 0.0037 - val_loss: 0.0039\n","Epoch 14/100\n","274/274 [==============================] - 2s 6ms/step - loss: 0.0037 - val_loss: 0.0039\n","Epoch 15/100\n","274/274 [==============================] - 2s 7ms/step - loss: 0.0037 - val_loss: 0.0039\n","Epoch 16/100\n","274/274 [==============================] - 2s 7ms/step - loss: 0.0037 - val_loss: 0.0039\n","Epoch 17/100\n","274/274 [==============================] - 2s 7ms/step - loss: 0.0037 - val_loss: 0.0039\n","Epoch 18/100\n","274/274 [==============================] - 2s 6ms/step - loss: 0.0037 - val_loss: 0.0039\n","Epoch 19/100\n","274/274 [==============================] - 2s 6ms/step - loss: 0.0037 - val_loss: 0.0038\n","Epoch 20/100\n","274/274 [==============================] - 2s 7ms/step - loss: 0.0037 - val_loss: 0.0038\n","Epoch 21/100\n","274/274 [==============================] - 2s 6ms/step - loss: 0.0037 - val_loss: 0.0038\n","Epoch 22/100\n","274/274 [==============================] - 2s 6ms/step - loss: 0.0037 - val_loss: 0.0038\n","Epoch 23/100\n","274/274 [==============================] - 2s 6ms/step - loss: 0.0037 - val_loss: 0.0038\n","Epoch 24/100\n","274/274 [==============================] - 2s 6ms/step - loss: 0.0037 - val_loss: 0.0038\n","Epoch 25/100\n","274/274 [==============================] - 2s 6ms/step - loss: 0.0037 - val_loss: 0.0038\n","Epoch 26/100\n","274/274 [==============================] - 2s 6ms/step - loss: 0.0036 - val_loss: 0.0038\n","Epoch 27/100\n","274/274 [==============================] - 2s 6ms/step - loss: 0.0036 - val_loss: 0.0038\n","Epoch 28/100\n","274/274 [==============================] - 2s 6ms/step - loss: 0.0036 - val_loss: 0.0038\n","Epoch 29/100\n","274/274 [==============================] - 2s 7ms/step - loss: 0.0036 - val_loss: 0.0038\n","Epoch 30/100\n","274/274 [==============================] - 2s 6ms/step - loss: 0.0036 - val_loss: 0.0038\n","Epoch 31/100\n","274/274 [==============================] - 2s 6ms/step - loss: 0.0036 - val_loss: 0.0038\n","Epoch 32/100\n","274/274 [==============================] - 2s 7ms/step - loss: 0.0036 - val_loss: 0.0038\n","Epoch 33/100\n","274/274 [==============================] - 2s 6ms/step - loss: 0.0036 - val_loss: 0.0038\n","Epoch 34/100\n","274/274 [==============================] - 2s 6ms/step - loss: 0.0036 - val_loss: 0.0038\n","Epoch 35/100\n","274/274 [==============================] - 2s 6ms/step - loss: 0.0036 - val_loss: 0.0039\n","Epoch 36/100\n","274/274 [==============================] - 3s 10ms/step - loss: 0.0036 - val_loss: 0.0039\n","Epoch 37/100\n","274/274 [==============================] - 2s 6ms/step - loss: 0.0036 - val_loss: 0.0039\n","Epoch 38/100\n","274/274 [==============================] - 3s 9ms/step - loss: 0.0036 - val_loss: 0.0039\n","Epoch 39/100\n","274/274 [==============================] - 2s 6ms/step - loss: 0.0036 - val_loss: 0.0039\n","Epoch 40/100\n","274/274 [==============================] - 2s 6ms/step - loss: 0.0036 - val_loss: 0.0039\n","Epoch 41/100\n","274/274 [==============================] - 2s 6ms/step - loss: 0.0036 - val_loss: 0.0039\n","Epoch 42/100\n","274/274 [==============================] - 2s 6ms/step - loss: 0.0036 - val_loss: 0.0040\n","Epoch 43/100\n","274/274 [==============================] - 2s 6ms/step - loss: 0.0036 - val_loss: 0.0039\n","Epoch 44/100\n","274/274 [==============================] - 2s 6ms/step - loss: 0.0036 - val_loss: 0.0039\n","Epoch 45/100\n","274/274 [==============================] - 2s 6ms/step - loss: 0.0036 - val_loss: 0.0039\n","Epoch 46/100\n","274/274 [==============================] - 2s 7ms/step - loss: 0.0036 - val_loss: 0.0039\n","Epoch 47/100\n","274/274 [==============================] - 2s 6ms/step - loss: 0.0036 - val_loss: 0.0039\n","Epoch 48/100\n","274/274 [==============================] - 2s 6ms/step - loss: 0.0036 - val_loss: 0.0039\n","Epoch 49/100\n","274/274 [==============================] - 3s 10ms/step - loss: 0.0036 - val_loss: 0.0039\n","Epoch 50/100\n","274/274 [==============================] - 4s 14ms/step - loss: 0.0036 - val_loss: 0.0039\n","Epoch 51/100\n","274/274 [==============================] - 2s 8ms/step - loss: 0.0036 - val_loss: 0.0039\n","Epoch 52/100\n","274/274 [==============================] - 2s 7ms/step - loss: 0.0036 - val_loss: 0.0039\n","Epoch 53/100\n","274/274 [==============================] - 3s 13ms/step - loss: 0.0036 - val_loss: 0.0039\n","Epoch 54/100\n","274/274 [==============================] - 4s 14ms/step - loss: 0.0036 - val_loss: 0.0039\n","Epoch 55/100\n","274/274 [==============================] - 4s 16ms/step - loss: 0.0036 - val_loss: 0.0039\n","Epoch 56/100\n","274/274 [==============================] - 6s 20ms/step - loss: 0.0036 - val_loss: 0.0039\n","Epoch 57/100\n","274/274 [==============================] - 4s 13ms/step - loss: 0.0036 - val_loss: 0.0039\n","Epoch 58/100\n","274/274 [==============================] - 2s 7ms/step - loss: 0.0036 - val_loss: 0.0039\n","Epoch 59/100\n","274/274 [==============================] - 2s 7ms/step - loss: 0.0036 - val_loss: 0.0039\n","Epoch 60/100\n","274/274 [==============================] - 2s 7ms/step - loss: 0.0036 - val_loss: 0.0039\n","Epoch 61/100\n","274/274 [==============================] - 2s 6ms/step - loss: 0.0036 - val_loss: 0.0038\n","Epoch 62/100\n","274/274 [==============================] - 2s 6ms/step - loss: 0.0036 - val_loss: 0.0039\n","Epoch 63/100\n","274/274 [==============================] - 2s 7ms/step - loss: 0.0036 - val_loss: 0.0038\n","Epoch 64/100\n","274/274 [==============================] - 2s 6ms/step - loss: 0.0036 - val_loss: 0.0038\n","Epoch 65/100\n","274/274 [==============================] - 2s 7ms/step - loss: 0.0036 - val_loss: 0.0038\n","Epoch 66/100\n","274/274 [==============================] - 2s 7ms/step - loss: 0.0036 - val_loss: 0.0038\n","Epoch 67/100\n","274/274 [==============================] - 3s 10ms/step - loss: 0.0036 - val_loss: 0.0038\n","Epoch 68/100\n","274/274 [==============================] - 3s 10ms/step - loss: 0.0036 - val_loss: 0.0038\n","Epoch 69/100\n","274/274 [==============================] - 2s 6ms/step - loss: 0.0036 - val_loss: 0.0038\n","Epoch 70/100\n","274/274 [==============================] - 2s 7ms/step - loss: 0.0036 - val_loss: 0.0038\n","Epoch 71/100\n","274/274 [==============================] - 2s 7ms/step - loss: 0.0036 - val_loss: 0.0038\n","Epoch 72/100\n","274/274 [==============================] - 2s 7ms/step - loss: 0.0035 - val_loss: 0.0038\n","Epoch 73/100\n","274/274 [==============================] - 2s 7ms/step - loss: 0.0035 - val_loss: 0.0038\n","Epoch 74/100\n","274/274 [==============================] - 2s 6ms/step - loss: 0.0035 - val_loss: 0.0038\n","Epoch 75/100\n","274/274 [==============================] - 2s 7ms/step - loss: 0.0035 - val_loss: 0.0038\n","Epoch 76/100\n","274/274 [==============================] - 2s 6ms/step - loss: 0.0035 - val_loss: 0.0037\n","Epoch 77/100\n","274/274 [==============================] - 2s 7ms/step - loss: 0.0035 - val_loss: 0.0037\n","Epoch 78/100\n","274/274 [==============================] - 2s 7ms/step - loss: 0.0035 - val_loss: 0.0037\n","Epoch 79/100\n","274/274 [==============================] - 2s 6ms/step - loss: 0.0035 - val_loss: 0.0037\n","Epoch 80/100\n","274/274 [==============================] - 2s 6ms/step - loss: 0.0035 - val_loss: 0.0037\n","Epoch 81/100\n","274/274 [==============================] - 2s 7ms/step - loss: 0.0035 - val_loss: 0.0037\n","Epoch 82/100\n","274/274 [==============================] - 2s 7ms/step - loss: 0.0035 - val_loss: 0.0037\n","Epoch 83/100\n","274/274 [==============================] - 2s 6ms/step - loss: 0.0035 - val_loss: 0.0037\n","Epoch 84/100\n","274/274 [==============================] - 2s 6ms/step - loss: 0.0035 - val_loss: 0.0037\n","Epoch 85/100\n","274/274 [==============================] - 2s 6ms/step - loss: 0.0035 - val_loss: 0.0037\n","Epoch 86/100\n","274/274 [==============================] - 2s 6ms/step - loss: 0.0035 - val_loss: 0.0037\n","Epoch 87/100\n","274/274 [==============================] - 2s 6ms/step - loss: 0.0035 - val_loss: 0.0037\n","Epoch 88/100\n","274/274 [==============================] - 2s 6ms/step - loss: 0.0035 - val_loss: 0.0037\n","Epoch 89/100\n","274/274 [==============================] - 2s 6ms/step - loss: 0.0035 - val_loss: 0.0037\n","Epoch 90/100\n","274/274 [==============================] - 2s 6ms/step - loss: 0.0035 - val_loss: 0.0037\n","Epoch 91/100\n","274/274 [==============================] - 2s 6ms/step - loss: 0.0035 - val_loss: 0.0037\n","Epoch 92/100\n","274/274 [==============================] - 2s 7ms/step - loss: 0.0035 - val_loss: 0.0037\n","Epoch 93/100\n","274/274 [==============================] - 2s 6ms/step - loss: 0.0035 - val_loss: 0.0037\n","Epoch 94/100\n","274/274 [==============================] - 2s 6ms/step - loss: 0.0035 - val_loss: 0.0036\n","Epoch 95/100\n","274/274 [==============================] - 2s 6ms/step - loss: 0.0035 - val_loss: 0.0037\n","Epoch 96/100\n","274/274 [==============================] - 2s 6ms/step - loss: 0.0035 - val_loss: 0.0037\n","Epoch 97/100\n","274/274 [==============================] - 2s 6ms/step - loss: 0.0035 - val_loss: 0.0037\n","Epoch 98/100\n","274/274 [==============================] - 2s 6ms/step - loss: 0.0035 - val_loss: 0.0037\n","Epoch 99/100\n","274/274 [==============================] - 2s 6ms/step - loss: 0.0035 - val_loss: 0.0037\n","Epoch 100/100\n","274/274 [==============================] - 2s 7ms/step - loss: 0.0035 - val_loss: 0.0037\n"]}]},{"cell_type":"code","source":["#plot history\n","pyplot.plot(history.history['loss'], label='train')\n","pyplot.plot(history.history['val_loss'], label='test')\n","pyplot.xlabel('Epoch')\n","pyplot.ylabel('Loss')\n","pyplot.legend()\n","pyplot.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":279},"id":"IG8ydw6TaIUS","executionInfo":{"status":"ok","timestamp":1674289691611,"user_tz":-420,"elapsed":774,"user":{"displayName":"Fanny F","userId":"11831095778884674749"}},"outputId":"bd339248-f294-412a-aa67-31cff2410566"},"execution_count":101,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 432x288 with 1 Axes>"],"image/png":"\n"},"metadata":{"needs_background":"light"}}]},{"cell_type":"code","source":["#membuat prediksi training\n","xhat = model.predict(train_X)\n","train_X = train_X.reshape((train_X.shape[0], train_X.shape[2]))\n","\n","#invert scaling untuk peramalan\n","inv_xhat = concatenate((xhat, train_X[:, 1:]), axis=1)\n","inv_xhat = scaler.inverse_transform(inv_xhat)\n","inv_xhat = inv_xhat[:,0]\n","\n","#invert scaling untuk aktual\n","train_y = train_y.reshape((len(train_y), 1))\n","inv_x = concatenate((train_y, train_X[:, 1:]), axis=1)\n","inv_x = scaler.inverse_transform(inv_x)\n","inv_x = inv_x[:,0]\n","\n","#================================================================#\n","\n","#membuat prediksi testing\n","yhat = model.predict(test_X)\n","test_X = test_X.reshape((test_X.shape[0], test_X.shape[2]))\n","\n","#invert scaling untuk peramalan\n","inv_yhat = concatenate((yhat, test_X[:, 1:]), axis=1)\n","inv_yhat = scaler.inverse_transform(inv_yhat)\n","inv_yhat = inv_yhat[:,0]\n","\n","#invert scaling untuk aktual\n","test_y = test_y.reshape((len(test_y), 1))\n","inv_y = concatenate((test_y, test_X[:, 1:]), axis=1)\n","inv_y = scaler.inverse_transform(inv_y)\n","inv_y = inv_y[:,0]"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"MR5MTgwYaKCi","executionInfo":{"status":"ok","timestamp":1674289700159,"user_tz":-420,"elapsed":5908,"user":{"displayName":"Fanny F","userId":"11831095778884674749"}},"outputId":"56ed04a9-5ab0-469b-845e-6d900f03e237"},"execution_count":102,"outputs":[{"output_type":"stream","name":"stdout","text":["1094/1094 [==============================] - 3s 2ms/step\n","1094/1094 [==============================] - 2s 2ms/step\n"]}]},{"cell_type":"markdown","source":["# Evaluation"],"metadata":{"id":"VyNVlCe-aNC8"}},{"cell_type":"code","source":["# calculate RMSE\n","# rmsetrain = np.sqrt(mean_squared_error(xhat, train_y))\n","# print(f'RMSE Training is : %.3f' % rmsetrain)\n","# rmsetrain = np.sqrt(mean_squared_error(inv_x, inv_xhat))\n","# print(f'RMSE Training is : %.3f' % rmsetrain)\n","\n","def mean_absolute_percentage_error(yhat, test_y):\n","    yhat, test_y = np.array(yhat), np.array(test_y)\n","    return np.mean(np.abs((yhat, test_y) / test_y))\n","\n","# print(f'MAPE train is : {(mean_absolute_percentage_error(train_y, xhat))}')\n","# print(f'MAPE train is : {(mean_absolute_percentage_error(inv_x, inv_xhat))}')\n","\n","print(f'MAPE test is : {(mean_absolute_percentage_error(test_y, yhat))}')\n","# print(f'MAPE test is : {(mean_absolute_percentage_error(inv_y, inv_yhat))}')\n","\n","rmsetest = np.sqrt(mean_squared_error(test_y, yhat))\n","print(f'RMSE Testing is : %.3f' % rmsetest)\n","# rmsetest = np.sqrt(mean_squared_error(inv_y, inv_yhat))\n","# print(f'RMSE Testing is : %.3f' % rmsetest)\n","\n","# print(f'R2 train is : {r2_score(train_y, xhat)}')\n","# print(f'R2 train is : {r2_score(inv_x, inv_xhat)}')\n","\n","print(f'R2 test is : {r2_score(test_y, yhat)}')\n","# print(f'R2 test is : {r2_score(inv_y, inv_yhat)}')\n","\n","mse = (mean_squared_error(inv_y, inv_yhat))\n","print('Test MSE: %.2f' % mse)\n","# print('Test MSE: %.2f' % (mean_squared_error(train_y, yhat)))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"uiIoFub2aMLM","executionInfo":{"status":"ok","timestamp":1674289705106,"user_tz":-420,"elapsed":614,"user":{"displayName":"Fanny F","userId":"11831095778884674749"}},"outputId":"c94a13d0-3935-43aa-c0e1-be9d567b1b52"},"execution_count":103,"outputs":[{"output_type":"stream","name":"stdout","text":["MAPE test is : 1.0187705189721676\n","RMSE Testing is : 0.060\n","R2 test is : 0.907722628790466\n","Test MSE: 1467109.31\n"]}]},{"cell_type":"code","source":["print('Actual :', test_y)\n","print('Predicted:', yhat)\n","# plot history\n","pyplot.plot(test_y, label='Actual')\n","pyplot.plot(yhat, label='Forecasting')\n","pyplot.xlabel('Timestep')\n","pyplot.ylabel('Value')\n","pyplot.legend()\n","pyplot.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":531},"id":"XEb3oh_VaQL3","executionInfo":{"status":"ok","timestamp":1674289709449,"user_tz":-420,"elapsed":820,"user":{"displayName":"Fanny F","userId":"11831095778884674749"}},"outputId":"e1c788ee-fa94-435b-f2a0-9793a131f0e7"},"execution_count":104,"outputs":[{"output_type":"stream","name":"stdout","text":["Actual : [[0.27600766]\n"," [0.2042744 ]\n"," [0.14124663]\n"," ...\n"," [0.43658048]\n"," [0.33777313]\n"," [0.27918517]]\n","Predicted: [[0.32419845]\n"," [0.2856185 ]\n"," [0.20806575]\n"," ...\n"," [0.51366866]\n"," [0.45245078]\n"," [0.36142093]]\n"]},{"output_type":"display_data","data":{"text/plain":["<Figure size 432x288 with 1 Axes>"],"image/png":"\n"},"metadata":{"needs_background":"light"}}]},{"cell_type":"code","source":["idx = 200#int(len(yhat))\n","aa=[x for x in range(idx)]\n","pyplot.figure(figsize=(20,4))\n","pyplot.plot(aa, test_y[:idx], marker='.', label=\"actual\")\n","pyplot.plot(aa, yhat[:idx], 'r', label=\"prediction\")\n","# plt.tick_params(left=False, labelleft=True) #remove ticks\n","pyplot.tight_layout()\n","sns.despine(top=True)\n","pyplot.subplots_adjust(left=0.07)\n","pyplot.ylabel('TOTAL Load', size=15)\n","pyplot.xlabel('Time step', size=15)\n","pyplot.legend(fontsize=15)\n","pyplot.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":174},"id":"UtTIiyg6aR-B","executionInfo":{"status":"ok","timestamp":1674289713816,"user_tz":-420,"elapsed":677,"user":{"displayName":"Fanny F","userId":"11831095778884674749"}},"outputId":"14a544c2-7d20-4a16-84fb-d0921fc5de23"},"execution_count":105,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 1440x288 with 1 Axes>"],"image/png":"\n"},"metadata":{"needs_background":"light"}}]},{"cell_type":"markdown","source":["# Build & train model"],"metadata":{"id":"HVkzmryR8uXN"}},{"cell_type":"code","source":["# Setting up an early stop\n","# earlystop = EarlyStopping(monitor='val_loss', min_delta=0.0001, patience=80,  verbose=1, mode='min')\n","# callbacks_list = [earlystop]\n","\n","\n","\n","#Build and train the model\n","def fit_model(train,test,timesteps,hl,lr,batch,epochs):\n","    X_train = []\n","    Y_train = []\n","    X_test = []\n","    Y_test = []\n","  \n","    # Loop for training data\n","    for i in range(timesteps,train.shape[0]):\n","        X_train.append(train[i-timesteps:i])\n","        Y_train.append(train[i][0])\n","    X_train,Y_train = np.array(X_train),np.array(Y_train)\n","  \n","    # Loop for val data\n","    for i in range(timesteps,test.shape[0]):\n","        X_test.append(test[i-timesteps:i])\n","        Y_test.append(test[i][0])\n","    X_test,Y_test = np.array(X_test),np.array(Y_test)\n","    \n","    # Adding Layers to the model\n","    model = Sequential()\n","    model.add(SimpleRNN(X_train.shape[2],input_shape = (X_train.shape[1],X_train.shape[2]),return_sequences = True,\n","                        activation = 'relu'))\n","    for i in range(len(hl)-1):        \n","        model.add(SimpleRNN(hl[i],activation = 'relu',return_sequences = True))\n","    model.add(SimpleRNN(hl[-1],activation = 'relu'))\n","    model.add(Dense(1))\n","    model.compile(optimizer = optimizers.Adam(lr = lr), loss = 'mean_squared_error')\n","    #print(model.summary())\n","  \n","    # Training the data\n","    start = time.time()\n","    history = model.fit(X_train,Y_train,epochs = epochs,batch_size = batch,validation_data = (X_test, Y_test),verbose = 0,\n","                        shuffle = False) #, callbacks=callbacks_list)\n","    end = time.time()\n","    processingTime = 'Processing Time {} seconds.'.format(end-start)\n","    model.reset_states()\n","    return model, history.history['loss'], history.history['val_loss'], processingTime"],"metadata":{"id":"DvEW_k959IZ8","executionInfo":{"status":"aborted","timestamp":1674289675924,"user_tz":-420,"elapsed":35,"user":{"displayName":"Fanny F","userId":"11831095778884674749"}}},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["timesteps = 30\n","hl = [50,45]\n","lr = 1e-3\n","batch_size = 128\n","num_epochs = 500"],"metadata":{"id":"ippCP-Ju-lZj","executionInfo":{"status":"aborted","timestamp":1674289675926,"user_tz":-420,"elapsed":37,"user":{"displayName":"Fanny F","userId":"11831095778884674749"}}},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["model,train_error,test_error,waktu = fit_model(train,test,timesteps,hl,lr,batch_size,num_epochs)\n","print(waktu)"],"metadata":{"id":"iFu2pilu-nx6","executionInfo":{"status":"aborted","timestamp":1674289675929,"user_tz":-420,"elapsed":40,"user":{"displayName":"Fanny F","userId":"11831095778884674749"}}},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["# Vizz"],"metadata":{"id":"f-jm-aUhABZ0"}},{"cell_type":"code","source":["# Plotting the training errors\n","def plot_error(train_loss,val_loss):\n","    plt.plot(train_loss,c = 'r')\n","    plt.plot(val_loss,c = 'b')\n","    plt.ylabel('Loss')\n","    plt.xlabel('Epochs')\n","    plt.title('Loss Plot')\n","    plt.legend(['train','val'],loc = 'upper right')\n","    plt.show()"],"metadata":{"id":"BE3sxTeYAFzt","executionInfo":{"status":"aborted","timestamp":1674289675931,"user_tz":-420,"elapsed":41,"user":{"displayName":"Fanny F","userId":"11831095778884674749"}}},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["plot_error(train_error,test_error)"],"metadata":{"id":"9Nrrrtw1_0uI","executionInfo":{"status":"aborted","timestamp":1674289675931,"user_tz":-420,"elapsed":40,"user":{"displayName":"Fanny F","userId":"11831095778884674749"}}},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# Plotting the predictions\n","def plot_data(Y_test,Y_hat):\n","    plt.plot(Y_test,c = 'r')\n","    plt.plot(Y_hat,c = 'y')\n","    plt.xlabel('Day')\n","    plt.ylabel('Load')\n","    plt.title(\"Prediction using Multivatiate-RNN\")\n","    plt.legend(['Actual','Predicted'],loc = 'lower right')\n","    plt.show()"],"metadata":{"id":"L42wW2d3CJy6","executionInfo":{"status":"aborted","timestamp":1674289675933,"user_tz":-420,"elapsed":41,"user":{"displayName":"Fanny F","userId":"11831095778884674749"}}},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# Evaluating the model\n","def evaluate_model(model,test,timesteps):\n","    X_test = []\n","    Y_test = []\n","\n","    # Loop for testing data\n","    for i in range(timesteps,test.shape[0]):\n","        X_test.append(test[i-timesteps:i])\n","        Y_test.append(test[i][0])\n","    X_test,Y_test = np.array(X_test),np.array(Y_test)\n","    #print(X_test.shape,Y_test.shape)\n","  \n","    # Prediction Time !!!!\n","    Y_hat = model.predict(X_test)\n","    mse = mean_squared_error(Y_test,Y_hat)\n","    rmse = sqrt(mse)\n","    r = r2_score(Y_test,Y_hat)\n","    return mse, rmse, r, Y_test, Y_hat"],"metadata":{"id":"pY4-SgtfCUV3","executionInfo":{"status":"aborted","timestamp":1674289675934,"user_tz":-420,"elapsed":41,"user":{"displayName":"Fanny F","userId":"11831095778884674749"}}},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["mse, rmse, r2_value, true,predicted = evaluate_model(model,test,30)\n","print('MSE = {}'.format(mse))\n","print('RMSE = {}'.format(rmse))\n","print('R-Squared Score = {}'.format(r2_value))\n","plot_data(true,predicted)"],"metadata":{"id":"oQJ8-_4XEEVP","executionInfo":{"status":"aborted","timestamp":1674289675935,"user_tz":-420,"elapsed":42,"user":{"displayName":"Fanny F","userId":"11831095778884674749"}}},"execution_count":null,"outputs":[]}]}